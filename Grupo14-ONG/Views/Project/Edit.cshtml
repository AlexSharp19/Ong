@model Grupo14_ONG.ViewModels.ProjectViewModel

@{
    ViewBag.Title = "Editar proyecto";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.Hidden("images", Model.images)


<div class="up container">
    <div class="row">
        <section class="section section-lg bg-gray-1 " style="margin-top : 50px;">

            <h2 class="align-self-center">Editar proyecto "@Model.Name"</h2>
            <div class="form-horizontal">
                @for (int i = 0; i < Model.multimediaList.Count; i++)
                {
                    @Html.HiddenFor(x => x.multimediaList[i].Url)
                    @Html.HiddenFor(x => x.multimediaList[i].TypeFile)
                }
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <br />
                <br />
                <div class="col-md-6">
                    <div class="container-image-group col-md-offset-2">
                        <div class="container-data">
                            <input type="text" class="form-control" id="string_imagen" placeholder="Inserte URL...">
                            <br />
                            <a class="btn btn-primary" id="button_add">Agregar</a>
                            @Html.ValidationMessageFor(model => model.images, "", new { @class = "text-danger" })
                        </div>
                        <br />

                        <br />

                        <table id="container-images" class="tableMultiMedia" height:"12.5rem">
                            <thead>
                                <tr>
                                    <th scope="col">Tipo</th>
                                    <th scope="col">URL</th>
                                    <th scope="col">#</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>

                </div>

            </div>
            <br />
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar" class="btn btn-default" />
                </div>
            </div>

        </section>

    </div>

    <div>
        @Html.ActionLink("Volver a proyectos", "Index")
    </div>

</div>
}

@section Scripts {
    <script src="~/Scripts/Project.js"></script>
    <script>
        $(document).ready(function () {
            Project.init();

             @foreach (var d in Model.multimediaList)
             {
                @:images.push({ Url: "@d.Url", TypeFile: "@d.TypeFile"})
             }


            Project.DrawTableImages();
        });
    </script>
}


