@model Grupo14_ONG.ViewModels.RegisterUserViewModel


<br />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <section class="section section-lg bg-gray-1 text-center" style="margin-top: 30px;">
        <h2>Registrate</h2>
        <div class="form-horizontal container">
            <div class="row" style="padding-left: 2px">
                <div>
                    @for (int i = 0; i < Model.Rols.Count; i++)
                    {
                        @Html.HiddenFor(x => x.Rols[i].Id)
                        @Html.HiddenFor(x => x.Rols[i].name)
                    }
                </div>

                <div class="col-md-6">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div style="text-align:center">
                        @Html.LabelFor(model => model.Name)
                    </div>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "BoxCenter" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    <br />

                    <div style="text-align:center">
                        @Html.LabelFor(model => model.LastName)
                    </div>
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "BoxCenter" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    <br />

                    <div style="text-align:center">
                        @Html.LabelFor(model => model.Email)
                    </div>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "BoxCenter" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                <br />
                <div class="col-md-6 FormStyle">
                    <div style="text-align:center">
                        @Html.LabelFor(model => model.Password)
                    </div>
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "BoxCenter" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    <br />
                    <div style="text-align:center">
                        @Html.LabelFor(model => model.Password2)
                    </div>
                    @Html.EditorFor(model => model.Password2, new { htmlAttributes = new { @class = "BoxCenter" } })
                    @Html.ValidationMessageFor(model => model.Password2, "", new { @class = "text-danger" })
                    <br />

                    <div style="text-align:center">
                        <label>Rol</label>
                    </div>
                    @Html.DropDownListFor(x => Model.selectedRol, new SelectList(Model.Rols, "Id", "name"), htmlAttributes: new { @class = "BoxCenter" })
                    @Html.ValidationMessageFor(x => x.selectedRol, "", new { @class = "text-danger" })
                </div>
                <br /><br />
                <div class="form-group col-12" style="margin-top:20px">
                    <div class="col-md-offset-2 col-md-12  text-center">
                        <input type="submit" value="Registrar" class="button button-primary" />
                        <div style="margin-top:20px">
                            @Html.ActionLink("Volver", "Index")
                        </div>
                    </div>
                </div>
                <br /><br />


            </div>
        </div>
    </section>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}       