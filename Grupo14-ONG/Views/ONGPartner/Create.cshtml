@model Grupo14_ONG.ViewModels.ONGPartnerViewModel
@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()
    @Html.Hidden("images", Model.images)
<div class="up">
    <section class="section section-lg bg-gray-1  " style="margin-top : 100px;">


        <div class="form-horizontal container">
            <div class="row editPadding" >

                @for (int i = 0; i < Model.Provinces.Count; i++)
                {
                    @Html.HiddenFor(x => x.Provinces[i].Id)
                    @Html.HiddenFor(x => x.Provinces[i].Name)
                }

                @for (int i = 0; i < Model.ONGtypes.Count; i++)
                {
                    @Html.HiddenFor(x => x.ONGtypes[i].Id)
                    @Html.HiddenFor(x => x.ONGtypes[i].Name)
                }

                <hr />

                <div class="col-12 ">
                    <div class="align-items-center">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.IsActive)

                            @Html.CheckBoxFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive)
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-input col-12" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="col-md-6">


                    <div class="form-group">
                        @Html.LabelFor(model => model.IdMercadoPago, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.IdMercadoPago, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IdMercadoPago, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>




                    <div class="form-group">
                        <label class="control-label col-md-2">Provincia</label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(x => Model.selectedProvince, new SelectList(Model.Provinces, "Id", "Name"), htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.selectedProvince, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Tipo ONG</label>
                        <div class="col-md-10">
                            @Html.DropDownListFor(x => Model.selectedONGType, new SelectList(Model.ONGtypes, "Id", "Name"), htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.selectedONGType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>


            <div class="container" style="padding-top: 50px">
                <div class="row">

                    <div class="container-image-group col-12">
                        <div class="container-data">
                            <label>MultiMedia</label>
                            <input type="text" class="form-control col-12 " id="string_imagen" placeholder="Inserte URL...">
                            <br />
                            <a class="btn btn-primary" id="button_add">Agregar</a>
                            @Html.ValidationMessageFor(model => model.images, "", new { @class = "text-danger" })
                        </div>
                        <br />
                        <br />

                        <table id="container-images" class="tableMultiMedia" height:"10.5rem">
                            <thead>
                                <tr>
                                    <th scope="col">Tipo</th>
                                    <th scope="col">URL</th>
                                    <th scope="col">#</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>

            <div class="form-group col-12">
                <div class="col-md-offset-2 col-md-12  text-center">
                    <input type="submit" value="Crear" class="btn btn-default" />
                </div>
            </div>

        </div>
    </section>
</div>



}

@section Scripts {
    <script src="~/Scripts/Project.js"></script>
    <script>
        $(document).ready(function () {
            Project.init();
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}